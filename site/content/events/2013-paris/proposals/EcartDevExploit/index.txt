---
extension: html
filter:
- erb
- markdown
dirty: true
proposal: true
talk: true
selected: false
layout: event
author: Grégory Boissinot
title: Le grand écart entre des exigences de développement modernes et des exigences d'exploitation industrielles
platinum: true
---

**Abstract:**

Les grands groupes industriels doivent régulièrement répondre à des problématiques d'intégration pointues et satisfaire des exigences d'exploitation souvent uniques vis-à-vis des autres métiers et des problématiques de l'informatique de gestion.  Dans une majorité des cas, ces contraintes sont satisfaites par la présence de processus extrêmement complexes et la mise en œuvre d'outils lourds et peu adapté aux développeurs agiles répondant à des exigences modernes.

La satisfaction des exigences des développeurs et des exploitants nécessite de mettre en place de nouvelles méthodologies et de nouveaux outils, étapes par étapes, et capable de s'interfacer avec une partie de l'existant non changeable.

Cette présentation :

1. définira une usine logicielle (build, test, ...) dans un environnement industriel
1. décrira des exemples d'exigences d'exploitation tels que:
    - Contrôle totale de l'environnement de build, de test et de run
    - Mise en place d'une traçabilité de bout en bout de la chaine de build
    - Reproductibilité du build sur plusieurs décennies (exemple de SLA 25 ans)
    - Mise en place d'une chaine de qualification et de tests à différents niveaux avec différents acteurs
    - Cohabitation d'exploitation de binaires issues de différents langages  et stockage sur le long terme
    - Traçabilité code source/binaire
    - Disponibilité d'une overview sur les dépendances des binaires toujours à jour
    - Cible de déploiement mais sans accès ou avec un accès restreint aux matériels cibles
    - Création de l'environnement de run simplement et abordable par un exploitant
    - Surveillance de l'état des projets en continu
1. décrira les exigences des développeurs suivantes:
    - Utilisation de méthodologies agiles telles que Scrum
    - Build incrémental
    - Feedback extrêmement rapide
    - Simplicité de construction de l'environnement de développement (fetch des dépendances, cycles de qualification de leurs livraisons, ...)
    - Intégration parfaire dans leurs outils de développement
    - Utilisation le plus possible des outils standard issue de l'informatique de gestion
1. puis vous donnera des tips and tricks afin de répondre à ces différents besoins avec des outils modernes tels que
    - Jenkins et son écosystème de plugins
    - Sonar
    - Maven
    - Ant/Ivy et Gradle

**Speaker:**

*Grégory Boissinot, Architecte logiciel, Zenika*

J'interviens auprès de nombreux clients pour former, conseiller et participer à la réalisation de frameworks et d'applications.
Contributeur Gradle, j'ai évangélisé l'outil à différents User Group français.
Je suis aussi un committeur actif sur Jenkins (anciennement Hudson) depuis 2008. J'ai réalisé une quarantaine de plugins et librairies transverses dont les très populaires EnvInject et xUnit plugins.
